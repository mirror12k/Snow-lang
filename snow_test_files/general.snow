

print 'hey'
print 5, 15

global &fun

while true
	print 'loop'
	do
		asdf:
		fun()

	local %obj
	obj:a
	obj:b 5


while false
	next
	print 'in while'
	redo
	last
else
	print 'in else'


if true
	print 'is true'
else
	print 'is false'

unless false
	print 'this is true'


until false
	print 'still trying to break physics'



local *t
global ?b
global ?b, %tabl
local $a, #beta

function foo
	print 'hello world!'


foo()

function argtest #$%
	print 'argtest'
function argtest2 #$$%***
	print 'argtest2', n, s2
function argtest3 var1, var2
	print 'argtest2', var1
function argtest3 #num, $string
	print 'argtest2', num
function parenargtest (num, tab, str)
	print 'this is parenargtest'


local %t = [5,4,3]
local %t = [ a => 15, b => 17 ]
local %t = [ a + b => 15, b => 17 ]
local %t = [
	asdf => false,
	qwerty => true,
	zxcv => nil,
]

for #i = 1,5
	print i


foreach [
		a => 5,
		b => 4,
		c => 3,
	]
	print k, v


local &f = {
	if true
		print 'hi'
	else
		print 'bye'
	print 'done with f'
}

f()

f = $# {
	print s, n
}

function testfun $$...
	print 'test'

f = ... {
	print 'my args:', ...
}

do
	local function f
		print 'test'
	f()
f()

function rettest
	return 5, print 'hey'

function rettest2
	print 'hey'
	return

f = ##{ n1+n2 }
print f(5,7)

local n = 5
++n
++n
--n

print "my n: $n!"
print ""



method test
	print self.msg

